# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: data.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='data.proto',
  package='test',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\ndata.proto\x12\x04test\"\'\n\x17TestDuplexStreamRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"*\n\x18TestDuplexStreamResponse\x12\x0e\n\x06result\x18\x01 \x01(\t2e\n\nTestDuplex\x12W\n\x10TestDuplexStream\x12\x1d.test.TestDuplexStreamRequest\x1a\x1e.test.TestDuplexStreamResponse\"\x00(\x01\x30\x01\x62\x06proto3'
)




_TESTDUPLEXSTREAMREQUEST = _descriptor.Descriptor(
  name='TestDuplexStreamRequest',
  full_name='test.TestDuplexStreamRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='test.TestDuplexStreamRequest.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=59,
)


_TESTDUPLEXSTREAMRESPONSE = _descriptor.Descriptor(
  name='TestDuplexStreamResponse',
  full_name='test.TestDuplexStreamResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='test.TestDuplexStreamResponse.result', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=103,
)

DESCRIPTOR.message_types_by_name['TestDuplexStreamRequest'] = _TESTDUPLEXSTREAMREQUEST
DESCRIPTOR.message_types_by_name['TestDuplexStreamResponse'] = _TESTDUPLEXSTREAMRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestDuplexStreamRequest = _reflection.GeneratedProtocolMessageType('TestDuplexStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _TESTDUPLEXSTREAMREQUEST,
  '__module__' : 'data_pb2'
  # @@protoc_insertion_point(class_scope:test.TestDuplexStreamRequest)
  })
_sym_db.RegisterMessage(TestDuplexStreamRequest)

TestDuplexStreamResponse = _reflection.GeneratedProtocolMessageType('TestDuplexStreamResponse', (_message.Message,), {
  'DESCRIPTOR' : _TESTDUPLEXSTREAMRESPONSE,
  '__module__' : 'data_pb2'
  # @@protoc_insertion_point(class_scope:test.TestDuplexStreamResponse)
  })
_sym_db.RegisterMessage(TestDuplexStreamResponse)



_TESTDUPLEX = _descriptor.ServiceDescriptor(
  name='TestDuplex',
  full_name='test.TestDuplex',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=105,
  serialized_end=206,
  methods=[
  _descriptor.MethodDescriptor(
    name='TestDuplexStream',
    full_name='test.TestDuplex.TestDuplexStream',
    index=0,
    containing_service=None,
    input_type=_TESTDUPLEXSTREAMREQUEST,
    output_type=_TESTDUPLEXSTREAMRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TESTDUPLEX)

DESCRIPTOR.services_by_name['TestDuplex'] = _TESTDUPLEX

# @@protoc_insertion_point(module_scope)
